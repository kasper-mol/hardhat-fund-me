{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdaw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "fundingAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xb19938cf7dfc3fbff8c4d241d5bb2bae72529444303f5d17cc3017895b13ff96",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1102768",
    "logsBloom": "0x
    "blockHash": "0x37d7771e1ed5905c12fe70dadf2777a548eb8acb7fd6d15c44aa2c387a4af6aa",
    "transactionHash": "0xb19938cf7dfc3fbff8c4d241d5bb2bae72529444303f5d17cc3017895b13ff96",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1102768",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "33858d698558990e81409e445574a485",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdaw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"fundingAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kasper Mol\",\"details\":\"this implements pricefeeds as our library \",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for gahtering funds\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is a demo\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/** @title A contract for gahtering funds\\n *  @author Kasper Mol\\n *  @notice This contract is a demo\\n *  @dev this implements pricefeeds as our library */\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n  address private immutable i_owner;\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  uint256 public constant MINIMUM_USD = 50 * 10**18;\\n\\n  modifier onlyOwner() {\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function withdraw() public payable onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdaw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success, \\\"Call failed\\\");\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  function getAddressToAmountFunded(address fundingAddress)\\n    public\\n    view\\n    returns (uint256)\\n  {\\n    return s_addressToAmountFunded[fundingAddress];\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    return s_priceFeed.version();\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x9d3312af6e2fe31f54d3849e460c415b530f2423c0a86739abf767e5cbaa4474\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n  function getPrice(AggregatorV3Interface pricefeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    (, int256 answer, , , ) = pricefeed.latestRoundData();\\r\\n    return uint256(answer * 10000000000);\\r\\n  }\\r\\n\\r\\n  // 1000000000\\r\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n  {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x69f6a1fe673973f4bc911f3742e2c357ebc0a02783deda22b54e1933f307728f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200141c3803806200141c833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c611296620001866000396000818161041201528181610661015281816106b101526108a701526112966000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063d3b9e73b146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba1565b610321565b6040516100d79190610be7565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610be7565b60405180910390f35b610113610410565b005b34801561012157600080fd5b5061012a610650565b6040516101379190610be7565b60405180910390f35b34801561014c57600080fd5b5061015561065d565b6040516101629190610c11565b60405180910390f35b34801561017757600080fd5b50610180610685565b60405161018d9190610c8b565b60405180910390f35b61019e6101e7565b005b6101a86106af565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610cd2565b610973565b6040516101de9190610c11565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109bb90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610dab565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610e16565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610495576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610540576000600182815481106104bb576104ba610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053890610e72565b915050610498565b50600067ffffffffffffffff81111561055c5761055b610ebb565b5b60405190808252806020026020018201604052801561058a5781602001602082028036833780820191505090505b50600190805190602001906105a0929190610a97565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105c790610f1b565b60006040518083038185875af1925050503d8060008114610604576040519150601f19603f3d011682016040523d82523d6000602084013e610609565b606091505b505090508061064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490610f7c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610734576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076e575b5050505050905060005b81518110156108425760008282815181106107e0576107df610e43565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083a90610e72565b9150506107c2565b50600067ffffffffffffffff81111561085e5761085d610ebb565b5b60405190808252806020026020018201604052801561088c5781602001602082028036833780820191505090505b50600190805190602001906108a2929190610a97565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108e990610f1b565b60006040518083038185875af1925050503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b505090508061096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610f7c565b60405180910390fd5b5050565b60006001828154811061098957610988610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109c7836109f7565b90506000670de0b6b3a764000085836109e09190610f9c565b6109ea9190611025565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4057600080fd5b505afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906110ce565b5050509150506402540be40081610a8f9190611149565b915050919050565b828054828255906000526020600020908101928215610b10579160200282015b82811115610b0f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab7565b5b509050610b1d9190610b21565b5090565b5b80821115610b3a576000816000905550600101610b22565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6e82610b43565b9050919050565b610b7e81610b63565b8114610b8957600080fd5b50565b600081359050610b9b81610b75565b92915050565b600060208284031215610bb757610bb6610b3e565b5b6000610bc584828501610b8c565b91505092915050565b6000819050919050565b610be181610bce565b82525050565b6000602082019050610bfc6000830184610bd8565b92915050565b610c0b81610b63565b82525050565b6000602082019050610c266000830184610c02565b92915050565b6000819050919050565b6000610c51610c4c610c4784610b43565b610c2c565b610b43565b9050919050565b6000610c6382610c36565b9050919050565b6000610c7582610c58565b9050919050565b610c8581610c6a565b82525050565b6000602082019050610ca06000830184610c7c565b92915050565b610caf81610bce565b8114610cba57600080fd5b50565b600081359050610ccc81610ca6565b92915050565b600060208284031215610ce857610ce7610b3e565b5b6000610cf684828501610cbd565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d46601b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db682610bce565b9150610dc183610bce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df657610df5610d7c565b5b828201905092915050565b600081519050610e1081610ca6565b92915050565b600060208284031215610e2c57610e2b610b3e565b5b6000610e3a84828501610e01565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7d82610bce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb057610eaf610d7c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f05600083610eea565b9150610f1082610ef5565b600082019050919050565b6000610f2682610ef8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f66600b83610cff565b9150610f7182610f30565b602082019050919050565b60006020820190508181036000830152610f9581610f59565b9050919050565b6000610fa782610bce565b9150610fb283610bce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610feb57610fea610d7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610bce565b915061103b83610bce565b92508261104b5761104a610ff6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61107581611056565b811461108057600080fd5b50565b6000815190506110928161106c565b92915050565b6000819050919050565b6110ab81611098565b81146110b657600080fd5b50565b6000815190506110c8816110a2565b92915050565b600080600080600060a086880312156110ea576110e9610b3e565b5b60006110f888828901611083565b9550506020611109888289016110b9565b945050604061111a88828901610e01565b935050606061112b88828901610e01565b925050608061113c88828901611083565b9150509295509295909350565b600061115482611098565b915061115f83611098565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119e5761119d610d7c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111db576111da610d7c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561121857611217610d7c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561125557611254610d7c565b5b82820290509291505056fea2646970667358221220409c8ba462d31ae233cb602650db8fa8c2c285d3698393b98d0735f21ce429cb64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e8146101405780639e87a5cd1461016b578063b60d428814610196578063d3b9e73b146101a0578063d7b4750c146101aa57610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461011557610099565b36610099576100976101e7565b005b6100a16101e7565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610ba1565b610321565b6040516100d79190610be7565b60405180910390f35b3480156100ec57600080fd5b506100f5610369565b6040516101029190610be7565b60405180910390f35b610113610410565b005b34801561012157600080fd5b5061012a610650565b6040516101379190610be7565b60405180910390f35b34801561014c57600080fd5b5061015561065d565b6040516101629190610c11565b60405180910390f35b34801561017757600080fd5b50610180610685565b60405161018d9190610c8b565b60405180910390f35b61019e6101e7565b005b6101a86106af565b005b3480156101b657600080fd5b506101d160048036038101906101cc9190610cd2565b610973565b6040516101de9190610c11565b60405180910390f35b6802b5e3af16b1880000610226600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109bb90919063ffffffff16565b1015610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610d5c565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b59190610dab565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d357600080fd5b505afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b9190610e16565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610495576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610540576000600182815481106104bb576104ba610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053890610e72565b915050610498565b50600067ffffffffffffffff81111561055c5761055b610ebb565b5b60405190808252806020026020018201604052801561058a5781602001602082028036833780820191505090505b50600190805190602001906105a0929190610a97565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105c790610f1b565b60006040518083038185875af1925050503d8060008114610604576040519150601f19603f3d011682016040523d82523d6000602084013e610609565b606091505b505090508061064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490610f7c565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610734576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076e575b5050505050905060005b81518110156108425760008282815181106107e0576107df610e43565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083a90610e72565b9150506107c2565b50600067ffffffffffffffff81111561085e5761085d610ebb565b5b60405190808252806020026020018201604052801561088c5781602001602082028036833780820191505090505b50600190805190602001906108a2929190610a97565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108e990610f1b565b60006040518083038185875af1925050503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b505090508061096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610f7c565b60405180910390fd5b5050565b60006001828154811061098957610988610e43565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109c7836109f7565b90506000670de0b6b3a764000085836109e09190610f9c565b6109ea9190611025565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a4057600080fd5b505afa158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7891906110ce565b5050509150506402540be40081610a8f9190611149565b915050919050565b828054828255906000526020600020908101928215610b10579160200282015b82811115610b0f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ab7565b5b509050610b1d9190610b21565b5090565b5b80821115610b3a576000816000905550600101610b22565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6e82610b43565b9050919050565b610b7e81610b63565b8114610b8957600080fd5b50565b600081359050610b9b81610b75565b92915050565b600060208284031215610bb757610bb6610b3e565b5b6000610bc584828501610b8c565b91505092915050565b6000819050919050565b610be181610bce565b82525050565b6000602082019050610bfc6000830184610bd8565b92915050565b610c0b81610b63565b82525050565b6000602082019050610c266000830184610c02565b92915050565b6000819050919050565b6000610c51610c4c610c4784610b43565b610c2c565b610b43565b9050919050565b6000610c6382610c36565b9050919050565b6000610c7582610c58565b9050919050565b610c8581610c6a565b82525050565b6000602082019050610ca06000830184610c7c565b92915050565b610caf81610bce565b8114610cba57600080fd5b50565b600081359050610ccc81610ca6565b92915050565b600060208284031215610ce857610ce7610b3e565b5b6000610cf684828501610cbd565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d46601b83610cff565b9150610d5182610d10565b602082019050919050565b60006020820190508181036000830152610d7581610d39565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610db682610bce565b9150610dc183610bce565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df657610df5610d7c565b5b828201905092915050565b600081519050610e1081610ca6565b92915050565b600060208284031215610e2c57610e2b610b3e565b5b6000610e3a84828501610e01565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e7d82610bce565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610eb057610eaf610d7c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610f05600083610eea565b9150610f1082610ef5565b600082019050919050565b6000610f2682610ef8565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f66600b83610cff565b9150610f7182610f30565b602082019050919050565b60006020820190508181036000830152610f9581610f59565b9050919050565b6000610fa782610bce565b9150610fb283610bce565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610feb57610fea610d7c565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061103082610bce565b915061103b83610bce565b92508261104b5761104a610ff6565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61107581611056565b811461108057600080fd5b50565b6000815190506110928161106c565b92915050565b6000819050919050565b6110ab81611098565b81146110b657600080fd5b50565b6000815190506110c8816110a2565b92915050565b600080600080600060a086880312156110ea576110e9610b3e565b5b60006110f888828901611083565b9550506020611109888289016110b9565b945050604061111a88828901610e01565b935050606061112b88828901610e01565b925050608061113c88828901611083565b9150509295509295909350565b600061115482611098565b915061115f83611098565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561119e5761119d610d7c565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111db576111da610d7c565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561121857611217610d7c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561125557611254610d7c565b5b82820290509291505056fea2646970667358221220409c8ba462d31ae233cb602650db8fa8c2c285d3698393b98d0735f21ce429cb64736f6c63430008080033",
  "devdoc": {
    "author": "Kasper Mol",
    "details": "this implements pricefeeds as our library ",
    "kind": "dev",
    "methods": {},
    "title": "A contract for gahtering funds",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is a demo",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}